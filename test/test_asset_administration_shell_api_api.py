# coding: utf-8

"""
    DotAAS Part 2 | HTTP/REST | Entire API Collection

    All APIs of the Specification of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub) in one collection. Please not that this API is not intended to generate productive code but only for overview purposes.   Publisher: Industrial Digital Twin Association (IDTA) 2023\"  # noqa: E501

    OpenAPI spec version: V3.0.1
    Contact: info@idtwin.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import aas_python_http_client
from aas_python_http_client.api.asset_administration_shell_api_api import AssetAdministrationShellAPIApi  # noqa: E501
from aas_python_http_client.rest import ApiException


class TestAssetAdministrationShellAPIApi(unittest.TestCase):
    """AssetAdministrationShellAPIApi unit test stubs"""

    def setUp(self):
        self.api = AssetAdministrationShellAPIApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_file_by_path_aas(self):
        """Test case for delete_file_by_path_aas

        Deletes file content of an existing submodel element at a specified path within submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_delete_submodel_by_id_aas(self):
        """Test case for delete_submodel_by_id_aas

        Deletes the submodel from the Asset Administration Shell.  # noqa: E501
        """
        pass

    def test_delete_submodel_element_by_path_aas(self):
        """Test case for delete_submodel_element_by_path_aas

        Deletes a submodel element at a specified path within the submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_delete_submodel_reference_by_id(self):
        """Test case for delete_submodel_reference_by_id

        Deletes the submodel reference from the Asset Administration Shell. Does not delete the submodel itself!  # noqa: E501
        """
        pass

    def test_delete_thumbnail(self):
        """Test case for delete_thumbnail

        """
        pass

    def test_get_all_submodel_elements_aas(self):
        """Test case for get_all_submodel_elements_aas

        Returns all submodel elements including their hierarchy  # noqa: E501
        """
        pass

    def test_get_all_submodel_elements_metadata_aas(self):
        """Test case for get_all_submodel_elements_metadata_aas

        Returns all submodel elements including their hierarchy  # noqa: E501
        """
        pass

    def test_get_all_submodel_elements_path_aas(self):
        """Test case for get_all_submodel_elements_path_aas

        Returns all submodel elements including their hierarchy  # noqa: E501
        """
        pass

    def test_get_all_submodel_elements_reference_aas(self):
        """Test case for get_all_submodel_elements_reference_aas

        Returns all submodel elements as a list of References  # noqa: E501
        """
        pass

    def test_get_all_submodel_elements_value_only_aas(self):
        """Test case for get_all_submodel_elements_value_only_aas

        Returns all submodel elements including their hierarchy in the ValueOnly representation  # noqa: E501
        """
        pass

    def test_get_all_submodel_references(self):
        """Test case for get_all_submodel_references

        Returns all submodel references  # noqa: E501
        """
        pass

    def test_get_asset_administration_shell(self):
        """Test case for get_asset_administration_shell

        Returns a specific Asset Administration Shell  # noqa: E501
        """
        pass

    def test_get_asset_administration_shell_reference(self):
        """Test case for get_asset_administration_shell_reference

        Returns a specific Asset Administration Shell as a Reference  # noqa: E501
        """
        pass

    def test_get_asset_information(self):
        """Test case for get_asset_information

        Returns the Asset Information  # noqa: E501
        """
        pass

    def test_get_file_by_path_aas(self):
        """Test case for get_file_by_path_aas

        Downloads file content from a specific submodel element from the Submodel at a specified path  # noqa: E501
        """
        pass

    def test_get_operation_async_result_aas(self):
        """Test case for get_operation_async_result_aas

        Returns the Operation result of an asynchronous invoked Operation  # noqa: E501
        """
        pass

    def test_get_operation_async_result_value_only_aas(self):
        """Test case for get_operation_async_result_value_only_aas

        Returns the value of the Operation result of an asynchronous invoked Operation  # noqa: E501
        """
        pass

    def test_get_operation_async_status_aas(self):
        """Test case for get_operation_async_status_aas

        Returns the Operation status of an asynchronous invoked Operation  # noqa: E501
        """
        pass

    def test_get_submodel_aas(self):
        """Test case for get_submodel_aas

        Returns the Submodel  # noqa: E501
        """
        pass

    def test_get_submodel_element_by_path_aas(self):
        """Test case for get_submodel_element_by_path_aas

        Returns a specific submodel element from the Submodel at a specified path  # noqa: E501
        """
        pass

    def test_get_submodel_element_by_path_metadata_aas(self):
        """Test case for get_submodel_element_by_path_metadata_aas

        Returns the metadata attributes if a specific submodel element from the Submodel at a specified path  # noqa: E501
        """
        pass

    def test_get_submodel_element_by_path_path_aas(self):
        """Test case for get_submodel_element_by_path_path_aas

        Returns a specific submodel element from the Submodel at a specified path in the Path notation  # noqa: E501
        """
        pass

    def test_get_submodel_element_by_path_reference_aas(self):
        """Test case for get_submodel_element_by_path_reference_aas

        Returns the Reference of a specific submodel element from the Submodel at a specified path in the ValueOnly representation  # noqa: E501
        """
        pass

    def test_get_submodel_element_by_path_value_only_aas(self):
        """Test case for get_submodel_element_by_path_value_only_aas

        Returns a specific submodel element from the Submodel at a specified path in the ValueOnly representation  # noqa: E501
        """
        pass

    def test_get_submodel_metadata_aas(self):
        """Test case for get_submodel_metadata_aas

        Returns the Submodel's metadata elements  # noqa: E501
        """
        pass

    def test_get_submodel_metadata_reference_aas(self):
        """Test case for get_submodel_metadata_reference_aas

        Returns the Submodel as a Reference  # noqa: E501
        """
        pass

    def test_get_submodel_path_aas(self):
        """Test case for get_submodel_path_aas

        Returns the Submodel's metadata elements  # noqa: E501
        """
        pass

    def test_get_submodel_value_only_aas(self):
        """Test case for get_submodel_value_only_aas

        Returns the Submodel's ValueOnly representation  # noqa: E501
        """
        pass

    def test_get_thumbnail(self):
        """Test case for get_thumbnail

        """
        pass

    def test_invoke_operation_async_aas(self):
        """Test case for invoke_operation_async_aas

        Synchronously invokes an Operation at a specified path  # noqa: E501
        """
        pass

    def test_invoke_operation_async_value_only_aas(self):
        """Test case for invoke_operation_async_value_only_aas

        Asynchronously invokes an Operation at a specified path  # noqa: E501
        """
        pass

    def test_invoke_operation_sync_aas(self):
        """Test case for invoke_operation_sync_aas

        Synchronously invokes an Operation at a specified path  # noqa: E501
        """
        pass

    def test_invoke_operation_sync_value_only_aas(self):
        """Test case for invoke_operation_sync_value_only_aas

        Synchronously invokes an Operation at a specified path  # noqa: E501
        """
        pass

    def test_patch_submodel_aas(self):
        """Test case for patch_submodel_aas

        Updates the Submodel  # noqa: E501
        """
        pass

    def test_patch_submodel_element_value_by_path_aas(self):
        """Test case for patch_submodel_element_value_by_path_aas

        Updates an existing submodel element value at a specified path within submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_patch_submodel_element_value_by_path_metadata_aas(self):
        """Test case for patch_submodel_element_value_by_path_metadata_aas

        Updates the metadata attributes of an existing submodel element value at a specified path within submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_patch_submodel_element_value_by_path_value_only_aas(self):
        """Test case for patch_submodel_element_value_by_path_value_only_aas

        Updates the value of an existing submodel element value at a specified path within submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_patch_submodel_metadata_aas(self):
        """Test case for patch_submodel_metadata_aas

        Updates the metadata attributes of the Submodel  # noqa: E501
        """
        pass

    def test_patch_submodel_value_only_aas(self):
        """Test case for patch_submodel_value_only_aas

        Updates teh values of the Submodel  # noqa: E501
        """
        pass

    def test_post_submodel_element_aas(self):
        """Test case for post_submodel_element_aas

        Creates a new submodel element  # noqa: E501
        """
        pass

    def test_post_submodel_element_by_path_aas(self):
        """Test case for post_submodel_element_by_path_aas

        Creates a new submodel element at a specified path within submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_post_submodel_reference(self):
        """Test case for post_submodel_reference

        Creates a submodel reference at the Asset Administration Shell  # noqa: E501
        """
        pass

    def test_put_asset_administration_shell(self):
        """Test case for put_asset_administration_shell

        Updates an existing Asset Administration Shell  # noqa: E501
        """
        pass

    def test_put_asset_information(self):
        """Test case for put_asset_information

        Updates the Asset Information  # noqa: E501
        """
        pass

    def test_put_file_by_path_aas(self):
        """Test case for put_file_by_path_aas

        Uploads file content to an existing submodel element at a specified path within submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_put_submodel_aas(self):
        """Test case for put_submodel_aas

        Updates the Submodel  # noqa: E501
        """
        pass

    def test_put_submodel_element_by_path_aas(self):
        """Test case for put_submodel_element_by_path_aas

        Updates an existing submodel element at a specified path within submodel elements hierarchy  # noqa: E501
        """
        pass

    def test_put_thumbnail(self):
        """Test case for put_thumbnail

        """
        pass


if __name__ == '__main__':
    unittest.main()
